
> cron-parser@1.0.0 test
> jest

  console.debug
    [getNextFireTime] Cron: 0 * * * *, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-28T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-28T12:00:00.000Z for cron: 0 * * * *

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 0,1,2,3,4,5,6, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-28T12:00:00.000Z matches cron 0 * * * *

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-28T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 * * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-28T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-28T00:00:00.000Z for cron: 0 0 0 * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-28T00:00:00.000Z matches cron 0 0 0 * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-28T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 L * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Last day modifier: 30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:278:15)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-30T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-30T00:00:00.000Z for cron: 0 0 0 L * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Last day modifier: 30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:278:15)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-30T00:00:00.000Z matches cron 0 0 0 L * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-30T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: 0 0 0 L * ?, Start: 2025-09-28T11:59:59.999Z, MinYear: 1970

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [getDayOfMonthSet] Last day modifier: 31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:278:15)

  console.debug
    [getPreviousFireTime] Checking candidate: 1970-12-31T00:00:00.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:810:15)

  console.debug
    [isMatch] Checking date: 1970-12-31T00:00:00.000Z for cron: 0 0 0 L * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Last day modifier: 31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:278:15)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 1970-12-31T00:00:00.000Z matches cron 0 0 0 L * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getPreviousFireTime] Match found: 1970-12-31T00:00:00.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:814:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 ? * 5L, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 1, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 2, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 3, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 4, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 5, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 6, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 7, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 8, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 9, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 10, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 11, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 12, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 13, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 14, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 15, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 16, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 17, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 18, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 19, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 20, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 21, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 22, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 23, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 24, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 25, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 26, last dow day 26, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 27, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 28, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 29, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 30, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-9: 26

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-26T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-26T00:00:00.000Z for cron: 0 0 0 ? * 5L

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 1, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 2, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 3, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 4, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 5, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 6, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 7, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 8, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 9, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 10, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 11, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 12, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 13, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 14, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 15, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 16, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 17, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 18, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 19, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 20, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 21, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 22, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 23, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 24, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 25, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 26, last dow day 26, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 27, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 28, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 29, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 30, last dow day 26, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-9: 26

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [isDayOfWeekSatisfied] Last day check: 26, last dow day 26, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:355:15)

  console.debug
    [isMatch] Date 2025-09-26T00:00:00.000Z matches cron 0 0 0 ? * 5L

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-26T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 ? * 2#2, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 2, week 1, nth 2, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 9, week 2, nth 2, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 16, week 3, nth 2, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 23, week 4, nth 2, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 29 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 30, week 5, nth 2, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-9: 9

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-09T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-09T00:00:00.000Z for cron: 0 0 0 ? * 2#2

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 2, week 1, nth 2, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 9, week 2, nth 2, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 16, week 3, nth 2, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 23, week 4, nth 2, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 29 is not dow 2

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 30, week 5, nth 2, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-9: 9

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 9, week 2, nth 2, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)

  console.debug
    [isMatch] Date 2025-09-09T00:00:00.000Z matches cron 0 0 0 ? * 2#2

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-09T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 26W * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Nearest weekday to 26: 26

      at CronParser.getDayOfMonthSet (src/cronParser.ts:304:15)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-26T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-26T00:00:00.000Z for cron: 0 0 0 26W * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Nearest weekday to 26: 26

      at CronParser.getDayOfMonthSet (src/cronParser.ts:304:15)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-26T00:00:00.000Z matches cron 0 0 0 26W * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-26T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 LW * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Last weekday: 30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:287:15)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-30T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-30T00:00:00.000Z for cron: 0 0 0 LW * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Last weekday: 30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:287:15)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-30T00:00:00.000Z matches cron 0 0 0 LW * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-30T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: 0 0 0 LW * ?, Start: 2025-09-28T11:59:59.999Z, MinYear: 1970

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [getDayOfMonthSet] Last weekday: 31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:287:15)

  console.debug
    [getPreviousFireTime] Checking candidate: 1970-12-31T00:00:00.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:810:15)

  console.debug
    [isMatch] Checking date: 1970-12-31T00:00:00.000Z for cron: 0 0 0 LW * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Last weekday: 31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:287:15)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 1970-12-31T00:00:00.000Z matches cron 0 0 0 LW * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getPreviousFireTime] Match found: 1970-12-31T00:00:00.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:814:17)

  console.debug
    [getNextFireTime] Cron: 0 */15 * * * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-28T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-28T12:00:00.000Z for cron: 0 */15 * * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-28T12:00:00.000Z matches cron 0 */15 * * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-28T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 ? JAN MON, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 1, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 1, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 1, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 1, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-1: 6,13,20,27

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] Checking candidate: 2025-01-06T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-01-06T00:00:00.000Z for cron: 0 0 0 ? JAN MON

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 1, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 1, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 1, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 1, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 1, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-1: 6,13,20,27

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 1, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-01-06T00:00:00.000Z matches cron 0 0 0 ? JAN MON

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-01-06T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: */5 * * * * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-28T12:00:05.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-28T12:00:05.000Z for cron: */5 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-28T12:00:05.000Z matches cron */5 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-28T12:00:05.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: */5 * * * * ?, Start: 2025-09-28T11:59:59.999Z, MinYear: 1970

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 1970-12: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getPreviousFireTime] Checking candidate: 1970-12-31T23:59:55.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:810:15)

  console.debug
    [isMatch] Checking date: 1970-12-31T23:59:55.000Z for cron: */5 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 1970-12: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 1970-12-31T23:59:55.000Z matches cron */5 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getPreviousFireTime] Match found: 1970-12-31T23:59:55.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:814:17)

  console.debug
    [getNextFireTime] Cron: 0 0 12 1,15 * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,15

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-01T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-01T12:00:00.000Z for cron: 0 0 12 1,15 * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,15

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-01T12:00:00.000Z matches cron 0 0 12 1,15 * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-01T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 ? MAR,APR WED#3, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 5, week 1, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 12, week 2, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 19, week 3, nth 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 26, week 4, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 29 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 30 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 31 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-3: 19

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] Checking candidate: 2025-03-19T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-03-19T00:00:00.000Z for cron: 0 0 0 ? MAR,APR WED#3

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 5, week 1, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 12, week 2, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 19, week 3, nth 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 26, week 4, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 29 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 30 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 31 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-3: 19

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 19, week 3, nth 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)

  console.debug
    [isMatch] Date 2025-03-19T00:00:00.000Z matches cron 0 0 0 ? MAR,APR WED#3

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-03-19T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: 0 0 0 ? MAR,APR WED#3, Start: 2025-09-28T11:59:59.999Z, MinYear: 1970

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 1, week 1, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 8, week 2, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 15, week 3, nth 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 22, week 4, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 29, week 5, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 30 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 1970-4: 15

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getPreviousFireTime] Checking candidate: 1970-04-15T00:00:00.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:810:15)

  console.debug
    [isMatch] Checking date: 1970-04-15T00:00:00.000Z for cron: 0 0 0 ? MAR,APR WED#3

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 1, week 1, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 8, week 2, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 15, week 3, nth 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 22, week 4, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 29, week 5, nth 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 30 is not dow 3

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 1970-4: 15

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 15, week 3, nth 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)

  console.debug
    [isMatch] Date 1970-04-15T00:00:00.000Z matches cron 0 0 0 ? MAR,APR WED#3

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getPreviousFireTime] Match found: 1970-04-15T00:00:00.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:814:17)

  console.debug
    [getNextFireTime] Cron: 0 30 8 * * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-28T08:30:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-28T08:30:00.000Z for cron: 0 30 8 * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-28T08:30:00.000Z matches cron 0 30 8 * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-28T08:30:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 14 ? * WED, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-9: 3,10,17,24

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-03T14:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-03T14:00:00.000Z for cron: 0 0 14 ? * WED

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 5, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 6, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values 3, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-9: 3,10,17,24

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values 3, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-03T14:00:00.000Z matches cron 0 0 14 ? * WED

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-03T14:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 29 FEB ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] No valid days in 2025-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2026-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2026-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] No valid days in 2026-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2027-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2027-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] No valid days in 2027-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2028-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2028-2: 29

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2028-02-29T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2028-02-29T00:00:00.000Z for cron: 0 0 0 29 FEB ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2028-2: 29

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2028-02-29T00:00:00.000Z matches cron 0 0 0 29 FEB ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2028-02-29T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: 0 0 0 29 FEB ?, Start: 2025-09-28T11:59:59.999Z, MinYear: 1970

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 1970-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getPreviousFireTime] No valid days in 1970-2, advancing year

      at CronParser.getPreviousFireTime (src/cronParser.ts:683:17)

  console.debug
    [getPreviousFireTime] Advancing to 1970-2

      at CronParser.getPreviousFireTime (src/cronParser.ts:691:17)

  console.debug
    [getPreviousFireTime] No match found after 1 iterations

      at CronParser.getPreviousFireTime (src/cronParser.ts:854:13)

  console.debug
    [getNextFireTime] Cron: 59 * * * * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-28T12:00:59.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-28T12:00:59.000Z for cron: 59 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-28T12:00:59.000Z matches cron 59 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-28T12:00:59.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: 59 * * * * ?, Start: 2025-09-28T11:59:59.999Z, MinYear: 1970

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 1970-12: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getPreviousFireTime] Checking candidate: 1970-12-31T23:59:59.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:810:15)

  console.debug
    [isMatch] Checking date: 1970-12-31T23:59:59.000Z for cron: 59 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 1970-12: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 1970-12-31T23:59:59.000Z matches cron 59 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getPreviousFireTime] Match found: 1970-12-31T23:59:59.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:814:17)

  console.debug
    [getNextFireTime] Cron: 0 0 12 1 APR ? 2025, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2025

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-4: 1

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-04-01T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-04-01T12:00:00.000Z for cron: 0 0 12 1 APR ? 2025

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-4: 1

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-04-01T12:00:00.000Z matches cron 0 0 12 1 APR ? 2025

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-04-01T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: 0 0 12 1 APR ? 2025, Start: 2025-09-28T11:59:59.999Z, MinYear: 2025

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-4: 1

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getPreviousFireTime] Checking candidate: 2025-04-01T12:00:00.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:810:15)

  console.debug
    [isMatch] Checking date: 2025-04-01T12:00:00.000Z for cron: 0 0 12 1 APR ? 2025

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-4: 1

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-04-01T12:00:00.000Z matches cron 0 0 12 1 APR ? 2025

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getPreviousFireTime] Match found: 2025-04-01T12:00:00.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:814:17)

  console.debug
    [getNextFireTime] Cron: 0 */2 * 1-31/2 */2 ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-29T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-29T00:00:00.000Z for cron: 0 */2 * 1-31/2 */2 ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 1, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-29T00:00:00.000Z matches cron 0 */2 * 1-31/2 */2 ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-29T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 29 FEB ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] No valid days in 2025-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2026-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2026-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] No valid days in 2026-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2027-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2027-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] No valid days in 2027-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2028-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2028-2: 29

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2028-02-29T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2028-02-29T00:00:00.000Z for cron: 0 0 0 29 FEB ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2028-2: 29

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 2, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2028-02-29T00:00:00.000Z matches cron 0 0 0 29 FEB ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2028-02-29T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: 0 0 0 29 FEB ?, Start: 2025-09-28T11:59:59.999Z, MinYear: 1970

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 1970-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getPreviousFireTime] No valid days in 1970-2, advancing year

      at CronParser.getPreviousFireTime (src/cronParser.ts:683:17)

  console.debug
    [getPreviousFireTime] Advancing to 1970-2

      at CronParser.getPreviousFireTime (src/cronParser.ts:691:17)

  console.debug
    [getPreviousFireTime] No match found after 1 iterations

      at CronParser.getPreviousFireTime (src/cronParser.ts:854:13)

  console.debug
    [getNextFireTime] Cron: 59 59 23 31 12 ? 2099, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2099-12: 31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2099-12-31T23:59:59.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2099-12-31T23:59:59.000Z for cron: 59 59 23 31 12 ? 2099

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2099-12: 31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2099-12-31T23:59:59.000Z matches cron 59 59 23 31 12 ? 2099

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2099-12-31T23:59:59.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: 59 59 23 31 12 ? 2099, Start: 2025-09-28T11:59:59.999Z, MinYear: 2099

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [getPreviousFireTime] No match found after 0 iterations

      at CronParser.getPreviousFireTime (src/cronParser.ts:854:13)

  console.debug
    [getNextFireTime] Cron: 0 0,30/15 * * * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-28T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-28T12:00:00.000Z for cron: 0 0,30/15 * * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-28T12:00:00.000Z matches cron 0 0,30/15 * * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-28T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: */59 * * * * ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-28T12:00:59.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-28T12:00:59.000Z for cron: */59 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-28T12:00:59.000Z matches cron */59 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-28T12:00:59.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: */59 * * * * ?, Start: 2025-09-28T11:59:59.999Z, MinYear: 1970

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 1970-12: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getPreviousFireTime] Checking candidate: 1970-12-31T23:59:59.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:810:15)

  console.debug
    [isMatch] Checking date: 1970-12-31T23:59:59.000Z for cron: */59 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 1970-12: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 1970-12-31T23:59:59.000Z matches cron */59 * * * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getPreviousFireTime] Match found: 1970-12-31T23:59:59.000Z

      at CronParser.getPreviousFireTime (src/cronParser.ts:814:17)

  console.debug
    [getNextFireTime] Cron: 0 0 8 * * ?, Start: 2025-09-28T12:00:01.000-04:00, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-09-28T08:00:00.000-04:00

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-09-28T08:00:00.000-04:00 for cron: 0 0 8 * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-9: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 0, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-09-28T08:00:00.000-04:00 matches cron 0 0 8 * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-09-28T08:00:00.000-04:00

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getPreviousFireTime] Cron: 0 0 8 * * ?, Start: 2025-09-28T11:59:59.999-04:00, MinYear: 1970

      at CronParser.getPreviousFireTime (src/cronParser.ts:649:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 1970-12: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getPreviousFireTime] Checking candidate: 1970-12-31T08:00:00.000-05:00

      at CronParser.getPreviousFireTime (src/cronParser.ts:810:15)

  console.debug
    [isMatch] Checking date: 1970-12-31T08:00:00.000-05:00 for cron: 0 0 8 * * ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 1970-12: 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 4, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 1970-12-31T08:00:00.000-05:00 matches cron 0 0 8 * * ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getPreviousFireTime] Match found: 1970-12-31T08:00:00.000-05:00

      at CronParser.getPreviousFireTime (src/cronParser.ts:814:17)

  console.debug
    [getNextFireTime] Cron: 0 0 */2 1,15 JAN,FEB ?, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-1: 1,15

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [getNextFireTime] Checking candidate: 2025-01-01T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2025-01-01T12:00:00.000Z for cron: 0 0 */2 1,15 JAN,FEB ?

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [getDayOfMonthSet] Filtered days of month for 2025-1: 1,15

      at CronParser.getDayOfMonthSet (src/cronParser.ts:322:13)

  console.debug
    [isDayOfWeekSatisfied] Simple dow check: 3, values , satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:359:13)

  console.debug
    [isMatch] Date 2025-01-01T12:00:00.000Z matches cron 0 0 */2 1,15 JAN,FEB ?

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2025-01-01T12:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

  console.debug
    [getNextFireTime] Cron: 0 0 0 ? FEB MON#5, Start: 2025-09-28T12:00:01.000Z, MaxYear: 2099

      at CronParser.getNextFireTime (src/cronParser.ts:432:13)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 3, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 10, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 17, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 24, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2025-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2025-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2026-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 2, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 9, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 16, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 23, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2026-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2026-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2027-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 1, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 8, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 15, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 22, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2027-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2027-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2028-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 7, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 14, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 21, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 28, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 29 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2028-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2028-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2029-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 5, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 12, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 19, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 26, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2029-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2029-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2030-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 4, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 11, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 18, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 25, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2030-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2030-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2031-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 3, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 10, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 17, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 24, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2031-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2031-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2032-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 2, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 9, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 16, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 23, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 29 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2032-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2032-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2033-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 7, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 14, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 21, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 28, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2033-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2033-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2034-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 6, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 13, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 20, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 27, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2034-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2034-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2035-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 5, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 12, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 19, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 26, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2035-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2035-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2036-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 4, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 11, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 18, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 25, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 29 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2036-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2036-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2037-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 2, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 9, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 16, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 23, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2037-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2037-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2038-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 1, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 8, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 15, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 22, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2038-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2038-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2039-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 7, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 14, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 21, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 28, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2039-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2039-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2040-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 6, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 13, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 20, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 27, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 29 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2040-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2040-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2041-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 4, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 11, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 18, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 25, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2041-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2041-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2042-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 3, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 10, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 17, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 24, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2042-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2042-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2043-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] Day 1 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 2, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 8 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 9, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 15 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 16, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 22 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 23, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2043-2:

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] No valid days in 2043-2, advancing year

      at CronParser.getNextFireTime (src/cronParser.ts:466:17)

  console.debug
    [getNextFireTime] Advancing to 2044-2

      at CronParser.getNextFireTime (src/cronParser.ts:474:17)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 1, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 8, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 15, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 22, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 29, week 5, nth 5, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2044-2: 29

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [getNextFireTime] Checking candidate: 2044-02-29T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:595:15)

  console.debug
    [isMatch] Checking date: 2044-02-29T00:00:00.000Z for cron: 0 0 0 ? FEB MON#5

      at CronParser.isMatch (src/cronParser.ts:365:13)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 1, week 1, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 2 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 3 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 4 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 5 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 6 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 7 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 8, week 2, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 9 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 10 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 11 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 12 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 13 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 14 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 15, week 3, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 16 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 17 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 18 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 19 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 20 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 21 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 22, week 4, nth 5, satisfied: false

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 23 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 24 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 25 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 26 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 27 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] Day 28 is not dow 1

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:335:17)
          at Array.filter (<anonymous>)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 29, week 5, nth 5, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)
          at Array.filter (<anonymous>)

  console.debug
    [getDayOfMonthSet] Filtered days for 2044-2: 29

      at CronParser.getDayOfMonthSet (src/cronParser.ts:315:17)

  console.debug
    [isDayOfWeekSatisfied] nthDay check: 29, week 5, nth 5, satisfied: true

      at CronParser.isDayOfWeekSatisfied (src/cronParser.ts:340:15)

  console.debug
    [isMatch] Date 2044-02-29T00:00:00.000Z matches cron 0 0 0 ? FEB MON#5

      at CronParser.isMatch (src/cronParser.ts:422:13)

  console.debug
    [getNextFireTime] Match found: 2044-02-29T00:00:00.000Z

      at CronParser.getNextFireTime (src/cronParser.ts:599:17)

FAIL __tests__/cronParser.test.ts
  CronParser
    ✕ regular cron: every hour at :00:00 (62 ms)
    ✕ quartz: every day at 00:00:00 (9 ms)
    ✕ last day of month at 00:00:00 (18 ms)
    ✕ last Friday of month at 00:00:00 (74 ms)
    ✕ second Tuesday of month at 00:00:00 (54 ms)
    ✕ nearest weekday to 26th at 00:00:00 (9 ms)
    ✕ last weekday of month at 00:00:00 (11 ms)
    ✕ every 15 minutes (6 ms)
    ✕ every Monday in January (51 ms)
    ✓ invalid cron expression (21 ms)
    ✕ every 5 seconds (11 ms)
    ✕ specific days of the month: 1st and 15th at 12:00:00 (6 ms)
    ✕ third Wednesday in March and April (98 ms)
    ✕ common: daily at 08:30:00 (7 ms)
    ✕ common: weekly on Wednesday at 14:00:00 (46 ms)
    ✕ common: yearly on February 29th at 00:00:00 (leap year) (15 ms)
    ✕ obscure: last second of every minute (11 ms)
    ✕ obscure: only in 2025 on April 1st at 12:00:00 (13 ms)
    ✕ obscure: every even minute on odd days in even months (5 ms)
    ✓ edge: invalid step value (1 ms)
    ✕ edge: February 29 in non-leap year (15 ms)
    ✕ edge: maximum values (59 59 23 31 12 ? 2099) (6 ms)
    ✓ edge: invalid month value
    ✓ edge: invalid day-of-week value (1 ms)
    ✓ edge: invalid nth value for day-of-week (1 ms)
    ✕ complex: specific minutes with step interval (5 ms)
    ✕ complex: large step interval for seconds (10 ms)
    ✕ timezone: every day at 08:00:00 in America/New_York (13 ms)
    ✕ edge: invalid date (31st of February)
    ✕ complex: every 2 hours on specific days and months (6 ms)
    ✕ edge: fifth Monday in short month (436 ms)

  ● CronParser › regular cron: every hour at :00:00

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759064400
    Received: 1759060800

       7 |   test('regular cron: every hour at :00:00', () => {
       8 |     const parser = new CronParser('0 * * * *', timeZone);
    >  9 |     expect(parser.next(from)).toBe(1759064400); // 2025-09-28T13:00:00Z
         |                               ^
      10 |     expect(parser.previous(from)).toBe(1759057200); // 2025-09-28T11:00:00Z
      11 |     expect(parser.translate()).toBe('every hour');
      12 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:9:31)

  ● CronParser › quartz: every day at 00:00:00

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759104000
    Received: 1759017600

      13 |   test('quartz: every day at 00:00:00', () => {
      14 |     const parser = new CronParser('0 0 0 * * ?', timeZone);
    > 15 |     expect(parser.next(from)).toBe(1759104000); // 2025-09-29T00:00:00Z
         |                               ^
      16 |     expect(parser.previous(from)).toBe(1759017600); // 2025-09-28T00:00:00Z
      17 |     expect(parser.translate()).toBe('at midnight, every day');
      18 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:15:31)

  ● CronParser › last day of month at 00:00:00

    expect(received).toBe(expected) // Object.is equality

    Expected: 1756598400
    Received: 31449600

      20 |     const parser = new CronParser('0 0 0 L * ?', timeZone);
      21 |     expect(parser.next(from)).toBe(1759190400); // 2025-09-30T00:00:00Z
    > 22 |     expect(parser.previous(from)).toBe(1756598400); // 2025-08-31T00:00:00Z
         |                                   ^
      23 |     expect(parser.translate()).toBe('at midnight, on the last day of the month');
      24 |   });
      25 |   test('last Friday of month at 00:00:00', () => {

      at Object.<anonymous> (__tests__/cronParser.test.ts:22:35)

  ● CronParser › last Friday of month at 00:00:00

    expect(received).toBe(expected) // Object.is equality

    Expected: 1761868800
    Received: 1758844800

      25 |   test('last Friday of month at 00:00:00', () => {
      26 |     const parser = new CronParser('0 0 0 ? * 5L', timeZone);
    > 27 |     expect(parser.next(from)).toBe(1761868800); // 2025-10-31T00:00:00Z
         |                               ^
      28 |     expect(parser.previous(from)).toBe(1758844800); // 2025-09-26T00:00:00Z
      29 |     expect(parser.translate()).toBe('at midnight, on the last Friday of the month');
      30 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:27:31)

  ● CronParser › second Tuesday of month at 00:00:00

    expect(received).toBe(expected) // Object.is equality

    Expected: 1760400000
    Received: 1757376000

      31 |   test('second Tuesday of month at 00:00:00', () => {
      32 |     const parser = new CronParser('0 0 0 ? * 2#2', timeZone);
    > 33 |     expect(parser.next(from)).toBe(1760400000); // 2025-10-14T00:00:00Z
         |                               ^
      34 |     expect(parser.previous(from)).toBe(1757376000); // 2025-09-09T00:00:00Z
      35 |     expect(parser.translate()).toBe('at midnight, on the second Tuesday of the month');
      36 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:33:31)

  ● CronParser › nearest weekday to 26th at 00:00:00

    expect(received).toBe(expected) // Object.is equality

    Expected: 1761523200
    Received: 1758844800

      37 |   test('nearest weekday to 26th at 00:00:00', () => {
      38 |     const parser = new CronParser('0 0 0 26W * ?', timeZone);
    > 39 |     expect(parser.next(from)).toBe(1761523200); // 2025-10-27T00:00:00Z
         |                               ^
      40 |     expect(parser.previous(from)).toBe(1758844800); // 2025-09-26T00:00:00Z
      41 |     expect(parser.translate()).toBe('at midnight, on the nearest weekday to the 26th of the month');
      42 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:39:31)

  ● CronParser › last weekday of month at 00:00:00

    expect(received).toBe(expected) // Object.is equality

    Expected: 1756425600
    Received: 31449600

      44 |     const parser = new CronParser('0 0 0 LW * ?', timeZone);
      45 |     expect(parser.next(from)).toBe(1759190400); // 2025-09-30T00:00:00Z
    > 46 |     expect(parser.previous(from)).toBe(1756425600); // 2025-08-29T00:00:00Z
         |                                   ^
      47 |     expect(parser.translate()).toBe('at midnight, on the last weekday of the month');
      48 |   });
      49 |   test('every 15 minutes', () => {

      at Object.<anonymous> (__tests__/cronParser.test.ts:46:35)

  ● CronParser › every 15 minutes

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759061700
    Received: 1759060800

      49 |   test('every 15 minutes', () => {
      50 |     const parser = new CronParser('0 */15 * * * ?', timeZone);
    > 51 |     expect(parser.next(from)).toBe(1759061700); // 2025-09-28T12:15:00Z
         |                               ^
      52 |     expect(parser.previous(from)).toBe(1759059900); // 2025-09-28T11:45:00Z
      53 |     expect(parser.translate()).toBe('every 15 minutes');
      54 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:51:31)

  ● CronParser › every Monday in January

    expect(received).toBe(expected) // Object.is equality

    Expected: 1767571200
    Received: 1736121600

      55 |   test('every Monday in January', () => {
      56 |     const parser = new CronParser('0 0 0 ? JAN MON', timeZone);
    > 57 |     expect(parser.next(from)).toBe(1767571200); // 2026-01-05T00:00:00Z
         |                               ^
      58 |     expect(parser.previous(from)).toBe(1737936000); // 2025-01-27T00:00:00Z
      59 |     expect(parser.translate()).toBe('at midnight, in January, on days Monday');
      60 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:57:31)

  ● CronParser › every 5 seconds

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759060795
    Received: 31535995

      65 |     const parser = new CronParser('*/5 * * * * ?', timeZone);
      66 |     expect(parser.next(from)).toBe(1759060805); // 2025-09-28T12:00:05Z
    > 67 |     expect(parser.previous(from)).toBe(1759060795); // 2025-09-28T11:59:55Z
         |                                   ^
      68 |     expect(parser.translate()).toBe('every 5 seconds');
      69 |   });
      70 |   test('specific days of the month: 1st and 15th at 12:00:00', () => {

      at Object.<anonymous> (__tests__/cronParser.test.ts:67:35)

  ● CronParser › specific days of the month: 1st and 15th at 12:00:00

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759320000
    Received: 1756728000

      70 |   test('specific days of the month: 1st and 15th at 12:00:00', () => {
      71 |     const parser = new CronParser('0 0 12 1,15 * ?', timeZone);
    > 72 |     expect(parser.next(from)).toBe(1759320000); // 2025-10-01T12:00:00Z
         |                               ^
      73 |     expect(parser.previous(from)).toBe(1757937600); // 2025-09-15T12:00:00Z
      74 |     expect(parser.translate()).toBe('at time 12:00 PM, on the 1st and 15th of the month');
      75 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:72:31)

  ● CronParser › third Wednesday in March and April

    expect(received).toBe(expected) // Object.is equality

    Expected: 1713312000
    Received: 8985600

      77 |     const parser = new CronParser('0 0 0 ? MAR,APR WED#3', timeZone);
      78 |     expect(parser.next(from)).toBe(1742342400); // 2025-03-19T00:00:00Z
    > 79 |     expect(parser.previous(from)).toBe(1713312000); // 2024-04-17T00:00:00Z
         |                                   ^
      80 |     expect(parser.translate()).toBe('at midnight, in months March and April, on the third Wednesday of the month');
      81 |   });
      82 |   test('common: daily at 08:30:00', () => {

      at Object.<anonymous> (__tests__/cronParser.test.ts:79:35)

  ● CronParser › common: daily at 08:30:00

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759134600
    Received: 1759048200

      82 |   test('common: daily at 08:30:00', () => {
      83 |     const parser = new CronParser('0 30 8 * * ?', timeZone);
    > 84 |     expect(parser.next(from)).toBe(1759134600); // 2025-09-29T08:30:00Z
         |                               ^
      85 |     expect(parser.previous(from)).toBe(1759048200); // 2025-09-28T08:30:00Z
      86 |     expect(parser.translate()).toBe('at time 8:30 AM, every day');
      87 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:84:31)

  ● CronParser › common: weekly on Wednesday at 14:00:00

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759327200
    Received: 1756908000

      88 |   test('common: weekly on Wednesday at 14:00:00', () => {
      89 |     const parser = new CronParser('0 0 14 ? * WED', timeZone);
    > 90 |     expect(parser.next(from)).toBe(1759327200); // 2025-10-01T14:00:00Z
         |                               ^
      91 |     expect(parser.previous(from)).toBe(1758722400); // 2025-09-24T14:00:00Z
      92 |     expect(parser.translate()).toBe('at time 2:00 PM, on days Wednesday');
      93 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:90:31)

  ● CronParser › common: yearly on February 29th at 00:00:00 (leap year)

    CronError: No previous execution time found

      869 |     const prevDt = this.getPreviousFireTime(start);
      870 |     if (!prevDt) {
    > 871 |       throw new CronError('No previous execution time found');
          |             ^
      872 |     }
      873 |     return prevDt.toUnixInteger();
      874 |   }

      at CronParser.previous (src/cronParser.ts:871:13)
      at Object.<anonymous> (__tests__/cronParser.test.ts:97:19)

  ● CronParser › obscure: last second of every minute

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759060799
    Received: 31535999

      101 |     const parser = new CronParser('59 * * * * ?', timeZone);
      102 |     expect(parser.next(from)).toBe(1759060859); // 2025-09-28T12:00:59Z
    > 103 |     expect(parser.previous(from)).toBe(1759060799); // 2025-09-28T11:59:59Z
          |                                   ^
      104 |     expect(parser.translate()).toBe('at second 59 of every minute');
      105 |   });
      106 |   test('obscure: only in 2025 on April 1st at 12:00:00', () => {

      at Object.<anonymous> (__tests__/cronParser.test.ts:103:35)

  ● CronParser › obscure: only in 2025 on April 1st at 12:00:00

    expect(received).toBe(expected) // Object.is equality

    Expected: "at time 12:00 PM, on the 1st of April, in year 2025"
    Received: "at time 12:00 PM, at day 1st, at month April, at year 2025"

      108 |     expect(parser.next(from)).toBe(1743508800); // 2025-04-01T12:00:00Z
      109 |     expect(parser.previous(from)).toBe(1743508800); // 2025-04-01T12:00:00Z
    > 110 |     expect(parser.translate()).toBe('at time 12:00 PM, on the 1st of April, in year 2025');
          |                                ^
      111 |   });
      112 |   test('obscure: every even minute on odd days in even months', () => {
      113 |     const parser = new CronParser('0 */2 * 1-31/2 */2 ?', timeZone);

      at Object.<anonymous> (__tests__/cronParser.test.ts:110:32)

  ● CronParser › obscure: every even minute on odd days in even months

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759320000
    Received: 1759104000

      112 |   test('obscure: every even minute on odd days in even months', () => {
      113 |     const parser = new CronParser('0 */2 * 1-31/2 */2 ?', timeZone);
    > 114 |     expect(parser.next(from)).toBe(1759320000); // 2025-10-01T12:00:00Z
          |                               ^
      115 |     expect(parser.previous(from)).toBe(1756684680); // 2025-08-31T23:58:00Z
      116 |     expect(parser.translate()).toBe('every 2 minutes, on every 2 days from the 1st to the 31st, in every 2 months');
      117 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:114:31)

  ● CronParser › edge: February 29 in non-leap year

    CronError: No previous execution time found

      869 |     const prevDt = this.getPreviousFireTime(start);
      870 |     if (!prevDt) {
    > 871 |       throw new CronError('No previous execution time found');
          |             ^
      872 |     }
      873 |     return prevDt.toUnixInteger();
      874 |   }

      at CronParser.previous (src/cronParser.ts:871:13)
      at Object.<anonymous> (__tests__/cronParser.test.ts:124:19)

  ● CronParser › edge: maximum values (59 59 23 31 12 ? 2099)

    CronError: No previous execution time found

      869 |     const prevDt = this.getPreviousFireTime(start);
      870 |     if (!prevDt) {
    > 871 |       throw new CronError('No previous execution time found');
          |             ^
      872 |     }
      873 |     return prevDt.toUnixInteger();
      874 |   }

      at CronParser.previous (src/cronParser.ts:871:13)
      at Object.<anonymous> (__tests__/cronParser.test.ts:130:19)

  ● CronParser › complex: specific minutes with step interval

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759061700
    Received: 1759060800

      142 |   test('complex: specific minutes with step interval', () => {
      143 |     const parser = new CronParser('0 0,30/15 * * * ?', timeZone);
    > 144 |     expect(parser.next(from)).toBe(1759061700); // 2025-09-28T12:15:00Z
          |                               ^
      145 |     expect(parser.previous(from)).toBe(1759060800); // 2025-09-28T12:00:00Z
      146 |     expect(parser.translate()).toBe('at minutes 0, 30, 45 every hour');
      147 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:144:31)

  ● CronParser › complex: large step interval for seconds

    expect(received).toBe(expected) // Object.is equality

    Expected: 1759060799
    Received: 31535999

      149 |     const parser = new CronParser('*/59 * * * * ?', timeZone);
      150 |     expect(parser.next(from)).toBe(1759060859); // 2025-09-28T12:00:59Z
    > 151 |     expect(parser.previous(from)).toBe(1759060799); // 2025-09-28T11:59:59Z
          |                                   ^
      152 |     expect(parser.translate()).toBe('every 59 seconds');
      153 |   });
      154 |   test('timezone: every day at 08:00:00 in America/New_York', () => {

      at Object.<anonymous> (__tests__/cronParser.test.ts:151:35)

  ● CronParser › timezone: every day at 08:00:00 in America/New_York

    expect(received).toBe(expected) // Object.is equality

    Expected: "2025-09-29T08:00:00.000-04:00"
    Received: "2025-09-28T08:00:00.000-04:00"

      159 |     const nextDate = DateTime.fromSeconds(next, { zone: 'UTC' }).setZone(timeZoneNY);
      160 |     const prevDate = DateTime.fromSeconds(prev, { zone: 'UTC' }).setZone(timeZoneNY);
    > 161 |     expect(nextDate.toISO()).toBe('2025-09-29T08:00:00.000-04:00'); // 2025-09-29T12:00:00Z
          |                              ^
      162 |     expect(prevDate.toISO()).toBe('2025-09-28T08:00:00.000-04:00'); // 2025-09-28T12:00:00Z
      163 |     expect(parser.translate()).toBe('at time 8:00 AM, every day');
      164 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:161:30)

  ● CronParser › edge: invalid date (31st of February)

    expect(received).toThrow(expected)

    Expected substring: "Invalid date: day 31 is not valid for month February"

    Received function did not throw

      164 |   });
      165 |   test('edge: invalid date (31st of February)', () => {
    > 166 |     expect(() => new CronParser('0 0 0 31 FEB ?', timeZone)).toThrow('Invalid date: day 31 is not valid for month February');
          |                                                              ^
      167 |   });
      168 |   test('complex: every 2 hours on specific days and months', () => {
      169 |     const parser = new CronParser('0 0 */2 1,15 JAN,FEB ?', timeZone);

      at Object.<anonymous> (__tests__/cronParser.test.ts:166:62)

  ● CronParser › complex: every 2 hours on specific days and months

    expect(received).toBe(expected) // Object.is equality

    Expected: 1767820800
    Received: 1735732800

      168 |   test('complex: every 2 hours on specific days and months', () => {
      169 |     const parser = new CronParser('0 0 */2 1,15 JAN,FEB ?', timeZone);
    > 170 |     expect(parser.next(from)).toBe(1767820800); // 2026-01-15T00:00:00Z
          |                               ^
      171 |     expect(parser.previous(from)).toBe(1736980800); // 2025-01-15T22:00:00Z
      172 |     expect(parser.translate()).toBe('every 2 hours, on the 1st and 15th of the month, in months January and February');
      173 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:170:31)

  ● CronParser › edge: fifth Monday in short month

    expect(received).toBe(expected) // Object.is equality

    Expected: 1835481600
    Received: 2340316800

      174 |   test('edge: fifth Monday in short month', () => {
      175 |     const parser = new CronParser('0 0 0 ? FEB MON#5', timeZone);
    > 176 |     expect(parser.next(from)).toBe(1835481600); // 2028-03-01T00:00:00Z
          |                               ^
      177 |     expect(parser.previous(from)).toBe(1709251200); // 2024-03-01T00:00:00Z
      178 |     expect(parser.translate()).toBe('at midnight, on the fifth Monday of the month, in February');
      179 |   });

      at Object.<anonymous> (__tests__/cronParser.test.ts:176:31)

Test Suites: 1 failed, 1 total
Tests:       26 failed, 5 passed, 31 total
Snapshots:   0 total
Time:        4.451 s
Ran all test suites.
